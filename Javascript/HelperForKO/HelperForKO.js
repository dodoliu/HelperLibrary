// Generated by CoffeeScript 1.10.0
var HelperForKO;

HelperForKO = window["HelperForKO"] || {};

HelperForKO.Obj2Obj = function(data, callback) {
  var key, tmp;
  tmp = {};
  for (key in data) {
    tmp[key] = ko.observable(ko.isObservable(data[key]) ? data[key]() : data[key]);
  }
  if (callback != null) {
    callback(tmp);
  }
  return tmp;
};

HelperForKO.GetJSON = function(url, params, callback) {
  $.getJSON(url, params, function(result) {
    if (callback != null) {
      callback(result);
    }
  });
};

HelperForKO.EachArray2KOArray = function(originArray, resultArray, callback, obj2obj) {
  var i, item, len;
  resultArray.removeAll();
  for (i = 0, len = originArray.length; i < len; i++) {
    item = originArray[i];
    resultArray.push(obj2obj != null ? obj2obj(item) : HelperForKO.Obj2Obj(item));
  }
  if (callback != null) {
    callback();
  }
  return resultArray;
};

HelperForKO.EachArrayFindTarget = function(array, condition, callback) {
  var i, item, len, result;
  result = {};
  for (i = 0, len = array.length; i < len; i++) {
    item = array[i];
    if (condition(item)) {
      return result = item;
    }
  }
  if (callback != null) {
    callback();
  }
  return result;
};

HelperForKO.EachArrayFindTargetArray = function(array, condition, callback) {
  var i, item, len, result;
  result = [];
  for (i = 0, len = array.length; i < len; i++) {
    item = array[i];
    if (condition(item)) {
      result.push(item);
    }
  }
  if (callback != null) {
    callback();
  }
  return result;
};

HelperForKO.POST = function(url, params, callback) {
  $.post(url, params, function(result) {
    if (callback != null) {
      callback(result);
    }
  });
};
